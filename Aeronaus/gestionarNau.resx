<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAIABoBAAAJgAAACAgAAAAACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAEAE
        AAAAAAAAAAAAAAAAAAAAAAAASSMu+VMnLvk1Ghj5WC8s+VUvLfliNzb5Ty0u+UYoKvk2JCz5NjAy+TAq
        MPkqHyv5NSYw+VVRXvnR19v54evy+UMlNv86Iyz/QyIe/zsfHv8nFRf/KRkb/yMWGf82ISP/NSox/zZd
        Uf8tPDT/Jx8k/y0hJ/8xJCz/NkVJ//////9EIy3/LCU3/y4lNf8cDw7/JRga/x8VGv8pGiX/Kjg1/zRi
        Vf8xXFD/Jzcu/y4hIv8xICL/JBkf/xkrK/9rfX7/PCAa/zEiK/8wK0X/KSQ2/xYOD/8gGB//KBkm/yxL
        Qf8za17/KTkx/zJpXf8eGyD/Ixgd/ycbH/8cGBz/ID47/z0iIP8eEBD/LCg+/zAsR/8jHiz/Hxce/yQX
        I/8qTEb/NHVp/y9gVf8xcGP/NX5w/yAfJf8aEBX/HR4f/yY9Pv87IR//HRIS/ysZHP8uK0b/MCxG/x4Y
        Iv8gGST/JC81/zeBdv8vbF//OHFq/z5iav8vWEv/IC8m/y1oXf86P1b/OyIf/yoZGv8lHxz/KSIs/y4r
        Rf8mHy3/GxQa/yMcLv8nU0z/Rm90/21/r/9qktH/hbbq/ykrNf9LcHj/foik/zohIP8nFhf/JBUW/yUY
        Gv8oIS//JB0q/xsVGv8gISv/eKjA/5PS5/+g9/r/hsX0/5Xk/f+G1/D/jqer/4SHjf8vGhv/IBQW/ygX
        Gf8QCw3/Nx0c/x8YHv8cDhH/SmF7/3+63/+f6Pr/ldjf/zM9WP+n+///e6nG/+Pg4v/Px9v/HhYV/yke
        If8cExj/Gw8Y/yxEQP9DGhj/ODA4/5Kz0P9hga7/SHR5/0FRV/8tYFf/YpCn/1Z4gP+eoa3/p6G0/ych
        M/8lHiz/HBMZ/x4OFP8vYVf/iJKq/+fp7f9LPEX/REtK/5+juP/y+v7/y9Hn/298if99dnz/UlJh/+zm
        8P8mIDH/GhIY/ytQRf8wZFT/UWeB/7ewvv9eSk7/QiEe/3B0e/9odZz/ztrl/3yTpv+/y+H/qKy7/9fd
        6P/BvM//JBQW/ykXGf8gJSb/IC0r/7uwtf/u5u//WEFM/0wqJv89MDH/d3qR/8LT7/+ZqNH/0dzm/7jF
        zf+Li5H/vMHW/xEIC/8QCAj/EQkM/1NSb//Nysz/2N7g/5uMpv9DQln/IBYh/zEmK/9dXWX/qbLD/+z0
        +f/M197/VDk4/1dRWv9VRkb/RTk5/yEgJ/+Cc33/VTRM/6miqP94eJP/ktno/3Cbz/84RF7/ND9E/xoX
        H/9DQEX/SC8t/1AuKv9SNDT/UkFB+VJCQPkuJS75NBgv+VUsVPkjHSf5Tlx5+YLEzPlxoMD5LCUp+Udg
        bPl9uL75WG+N+T45RflENj35TUlV+QAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8oAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAWyo881IlLvNDHh/zUycw8zIYEvM8HR7zZTUy82I1MvNcMzLzZDc181oyMfNdNTXzajw782M5
        N/NhNzXzYDc48zkjKvM1GyTzNRok8zUkK/MtHCXzMR8t8y8jMPMuIy7zMSYx8zchLfNhWWfz19rg8///
        //P////z3+rx8+bv9fNNKDv/LxgV/2IvQv9WKir/MxkU/zYbHP9ZMC3/QyMi/z8hIf9ZMjD/bz87/2Q5
        N/9DJyn/Lxwf/y0aHP8wHSL/NSEu/zgxN/84RED/N0A5/zVBPf8vLDL/Jxsp/yUeKP8zJS3/PCw1/xQI
        Fv8REST/bHiC/9/q8f/n8PX/2ebw/xQPB/9LKkL/Vy9K/0AhFv9PKCL/PB4c/zwfHf9BIyH/Mxsc/yMT
        Fv89IyT/Mh0f/x4SFf8mGiH/Lh4g/zobGf86FiP/NDo//zxtXP8zRTz/MD82/y5AOP8nIyn/Lhwj/zAi
        KP8qISr/OSo0/xcUH/8AAAL/k6Ww////////////Tykz/180Xv8oHyr/KR4n/z8jIf9CIRv/PCAf/zQc
        HP8mFhf/IBMW/xsRFf8dFBf/IBQW/ykZGf8uHCX/Qi8v/zkmK/8uNTf/N2ZY/zVeVP8tPTX/LDYu/yEn
        J/8pGB//LyEl/y4hJ/9ILjP/LCYs/wkhIf88UFP///////////95Olz/Mh4q/yQhLf8xKT//KSQ3/zEc
        Hf8yGRX/FAsN/yQWGP8qGx7/Ixcd/x4TFv8gFhz/NiEq/ywbJf8pR0H/MlxQ/zZnWf80YVX/NGld/y5I
        P/8lMSr/Kicl/zshIv8sHiD/PCcp/zckKP8RDxn/JDU2/wcjIf9gdHj//////0IiJP8kFA3/KSAx/zIq
        Qf8zLUf/LSc8/x4SFf8NBgT/IhUX/yYaHv8hGB7/HRMZ/ygcJv8pFyj/JCgo/zFXSf8xVEj/N3Nm/zRt
        YP8pOjD/Jywj/yU3Lv8qJSX/KRge/yQYG/84IyX/LyAj/xwSGf8VGR7/Jz04/wEZGP9NaWz/Nh4T/z8g
        G/8wHiL/Kyc+/zAqQ/8zLkn/Lig+/xUOEP8PCQb/Ihgc/yEZH/8eFhz/Kx8r/ycVI/8mMS3/MVtM/zBd
        Uf82eGr/LEpB/yUnIP8xYVb/Kj8z/x4TGP8aDh3/Ihkd/yocHv8pHCD/NSIk/xQKEv8dKCj/LDw4/wU6
        N/8+IR//PSEc/zsfGP8uJDT/MCxI/zAqQf80MEv/LypA/xIMDf8XDg7/JBsj/x4XH/8mGyf/KBcm/ypF
        P/8xXU7/Nndq/zBgVf8nMSn/LEU8/zqOgf81d2r/KEU9/xoIEP8jFiH/Hxcb/xoVG/8lGx7/JRUa/xsb
        Hf8lOjb/K0lI/zwhH/9AIyL/MhoX/x0SF/8sKUH/MS5J/y4rRP81MU//KCU4/xEJCP8fFRv/Ixsl/yUb
        Jv8iDhv/KD87/zR1Zv82d2v/MWdd/zFqXv8nOC7/MGNX/zmOgP86j37/LFVO/yIKHP8VBxD/FRAW/ycc
        IP8jDxP/HB4g/yJCPP8iKjH/QiUi/zkgH/8PCQv/GwsH/yMaJf8wL0v/MCxG/y8rRP81MU//Hxkk/xkP
        Ef8kHSj/IBgi/yocKf8gFh7/L2Zc/zeBc/80d2r/N4h6/y1ZTv8rUkn/M39v/zWHdf86kIH/LlNP/xsZ
        Gv8UDxL/GAYM/xUGCv8iSED/KWVb/y0jMP87ISD/OyIf/xcPEP8dDg7/KRMQ/yUhMv8wLkv/LytE/zIt
        Sf8tKkH/GhQa/yIbJ/8kHSr/Ixoj/x0NGP8vX1r/OYl8/zR5bv82f3H/NHNo/y9sXf8qVEv/N25j/yxw
        WP8kdlz/J0k6/ygyKf8dKCL/K0xF/y1yZP8ZUET/TC8//zUeHv9CJSL/LhkZ/xQVFP8zHhj/LBUX/yoo
        QP8xLkr/LypD/zIwTP8hHiz/HRUb/yQdK/8XEhn/Hg4d/yhFSP84h3z/N3xy/zFrYP8kVEb/I2lK/2ee
        uf9OUoH/SVps/1Bzcv8kMST/FBcO/ypMQv8gdVb/PW51/2Fgmf8kHj3/OyIg/z0jIf8tFxn/EBIT/yUn
        Iv86Ihr/Lx8m/y0rSP8wLUj/LSpC/ykmOv8lHCP/IRge/xoVH/8oHS//Hx4t/zFoZP8sYlP/GTwu/zRy
        Yf9ZiZ7/cXGt/0ZKiv9ynOf/msT//2V7rv8YAg7/GQ4U/1GOj/8saWP/o7Pv/4OSsv87Ih//OiEf/zwj
        I/8wGRz/GBMX/x4iH/8mIBX/Ih8u/zAuTv8rJzz/JiAw/yUdKf8fFRj/FA8V/ycjNP8fFSj/GDIs/yhT
        Tv9SdIX/e5u9/3R3tv95jb3/gcL0/2+j4f+Dw///k9f//26ctP8HAAD/alFq/0Z6hf8tSFL/qJag/zwj
        IP89IyL/MBwe/y8aGP8vGRj/FQ0V/xgVGP8wHh3/KyU3/yooPv8lHiv/IRok/x4YHv8XEBL/Ihon/x0f
        Kv88TGL/XHik/4Wy0/+NtdL/l9/t/6f///+Kz/j/d6bq/4/V+P+b7///mfT//2mjxv89UFH/XHR7/yUm
        LP9DMzj/PSIf/zIeH/8aEBT/IxQU/zUeGv8aEBP/EAwV/z8iH/8xHR3/HRws/ygiNP8kHSj/HRYd/x0X
        Hv8RAAr/M05S/7H///+Y3vz/kuL7/6j///+f////pf///5zu//99tPD/k+D//5nu/v+M0/3/jfP//7Lv
        9v/t6ez/3e7y/8vX4P8+Ih//KRgb/xQNEf8lFhf/NB0c/x0SFv8GBgr/IxUV/0AjH/8kFxr/HBom/x4Z
        I/8NCQ3/FxIc/xgLEv9Xepn/ktru/6D1/f+b7vn/itT2/5fz//+o////TGd//0pgmP+j/P//qP///4PU
        8v96n8X/9/j4///////o7/b/sKPG/zMdHf8iExb/IRMV/ykaHf86ISL/Fw4S/wsHCf8OCw7/Nhwe/0Me
        HP8uHBz/FxEU/yIVFv8sCwj/Ky9E/5DS//9ihMn/aJXI/6b///+y3/3/xMzd/1GipP8PGAb/KBVE/571
        //+1////gMfd/3Frhv/IvsP/z8vQ/72qxP/o4e3/IhEU/xkaFP8nIx7/NB0h/ycXGP8RDRP/HBQb/xUK
        E/8bJCj/OToy/08nJf9DKCn/NhMR/x0KCf9mkLb/ndv//5LG//92mOP/V5C//0h4ev9ZUEf/CTk0/xxz
        Uv8fRTv/Sl+E/7v///+h/v//OC09/3t3hP+XkKb/emaI/9TV1v8fEBL/IR4b/yMhJf8mGiP/FxIY/yEY
        Hv8fGB7/HgkV/yZGRP83b2P/UBsU/ywAAP8mIy7/aIGY/6m0w/+cr8j/P0xu/z5daf9rhH3/GEcw/zJK
        Uv9xcpD/RVly/zdvYP8jQ0j/YJ/U/3+2xv8AAAD/b4qM//r0//+jmbP/rrDC/yMaJf8mHzH/JiAx/yQe
        Kv8jGyP/Hg0U/w4CBP8YAg7/MmBX/y9lV/9MRmL/dXqJ//D2+f//////iYSX/zYrNv8AAAD/QmBT/5+d
        oP+LkJn/6vb////////s7P//fXmf/zZNUf85SWH/VTlJ/0lMS/8RJif/f3OS//Hn+f//////KiY9/ysm
        Ov8pIzL/JBkl/xcGD/8YHh7/Kh0d/yoXIv8pZlP/NFlb/2SKwf/+/////////66xvf9bQ0j/EwAA/yQk
        J/+qq67/ipGr/8jR////////4ff+//D////W4f//s7rO/52gpf+dmJ7/urzB/3R3d/9HOFX/0sLa/+/w
        8f8sJTn/KiQ2/x8XJf8XERX/Hy0o/y9hU/84YVf/NGpZ/x9NSP9McKv/iZex/9DHyv+OkKD/Qigs/z8R
        Cf85HRn/UU9V/8jS2f+Chrf/Z3uk/7zV3f//////3e///5Gu2P/s+///vsbq/5OVtv+1srT/6vP4/8Kz
        xP+Vhqb/8/j4/ycgM/8eGCT/GAsR/xsVF/8uVkf/Ml9S/zBlV/8nYEr/IiU1/7m73P/YydH/q5ut/4Bz
        bv8oAAD/SSUi/0o0NP9ERUz/ZWp0/3qDqf89Umz/kaK8/+7z/v95jpj/CSQr/56tx/+2v9X/q7TF/663
        vv/Z5PD/1+31/5iPtv/n4+j/HBUe/yYUFP8wGhb/IhIc/x8gI/8sUkX/KFNE/xYIBv+EbXb/////////
        ///Irc3/UTVA/yoKAP9bNC//Wzc0/0AzNP85OkD/W190/6Gu4v+2xOr/orfj/4aZvP91fqf/pbTS/83Z
        2f+9yM7/qbfB/6mxu/+arLL/uMLY/7+pyv8lExP/KxYW/y4YGP8nGBz/HQ0a/xgWGf8dOS//KCEz/3Fe
        af/7+Pj//v/9//Xu9P+fhK3/SUFE/ygPC/9VLiv/RyQe/zQxNf9iXl//gH2S/9Lh8//g8///sML3/7vH
        7P/r8/j/6fD1/8DN1/+9yND/lpKX/1M/Qv+iuL//2OL4/x8PEf8gEhT/Fw0P/yESEv8dFBj/DAAE/ygk
        PP9DSGL/in+J/+Hd3//j4uT/4vLu/8m71v92XX//IB8g/xsMEf8uGyD/IRce/0g+Qv9NQ0j/Wl1p/9Tf
        4v/AzvD/zNfm//D5/P/8/f//2OPr/9zq9P9+eX//NAsH/1hJUP+Mp7b/AwAD/wQABP8AAAD/CQEC/xwQ
        FP8AAAD/LilJ/7S22P/s6+j/3uPi/83Q1f/R19z/uL7A/3ddg/+EhLH/TlyF/xogOv8XCQ3/EgQI/x0T
        Hf8bExz/LCYw/2Vlb/+1v8j/2ebv/+v1/f/s/P//kJSd/0wxLv9UMi7/PhgT/zs/UP9JPDz/NCos/zQq
        Kv8jHSD/CQcM/yUgI/+hnqX/qqKp/3NeaP+Bc37/z8/R/+7r6/+xvcT/bm+R/5C+2P+X3P//cpzg/0pk
        jf8tM0r/Jh0l/xAAAf8GAAD/AAAA/yIXG/9iYmr/k5qj/3V3ff8sDw3/Qx0X/1AxMP9DGxb/WEpR/21Z
        Wf9tWln/Z1VS/1hKSv8hIiv/NjlC/3Nmbf9KJjv/NAIq/ywAI/9hT1n/hoKL/19TcP9iY4n/jNzh/5bu
        6P+Z2v//bJLS/y4+Yf9fhKj/bJeh/09ob/80OUf/FA0c/wQAAP8VBwj/Lg0I/1QqIv9bODP/VTQx/1ov
        Kf9WPUH/VEJD/1hHR/9WRUT/UkNA/y0sMP8hHCv/KAsj/00cQv9cOWX/Wy5a/x0AEv8iJyz/VF13/2J5
        rP9+v9T/kNvX/4/V9f9efKz/GgoE/yYjLP9gh5z/j9zp/6X///+i+P//bJy//zMvSf8xISj/Qikq/0ko
        J/9LKSb/Sykl/1BIU/9QPz7zTz0981JAQPNRQT3zQDEz8ywdLPMdHSTzQB4181MqT/NLIkLzJRsl8yoz
        OvM9RlXzRVVq83avtvOHydLzhMPb81RshvNDQU/zLygp8wgAAPMhFSPzSFxj82WKkfNojqjzWmiF80xY
        bPM9R1vzPkRW80FGVfNIU2XzUmN78wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>